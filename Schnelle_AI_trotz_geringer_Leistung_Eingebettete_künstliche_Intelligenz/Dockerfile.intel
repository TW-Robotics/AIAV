# Dieses Dockerfile konfiguriert die Ausführungsumgebung für den Embedded AI HW Use Case
#
# This code is available under a GPL v3.0 license and comes without
# any explicit or implicit warranty.
#
# (C) Simon Schwaiger 2024 <schwaige@technikum-wien.at>

FROM intel/oneapi-aikit:2023.1.0-devel-ubuntu22.04

# Einstellen der Zeit
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata

# Manuelles upgrade der torch Version, da torch._dynamo.is_compiling benötigt wird
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    python3-pip libopenblas-base libopenmpi-dev libomp-dev

# Detectron Voraussetzungen
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    build-essential ninja-build git cmake

# Neuestes pip und cython für torch Installation
RUN pip install --upgrade pip
RUN pip3 install cython

# Torchvision Voraussetzungen
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    libjpeg-dev zlib1g-dev libpython3-dev libopenblas-dev libavcodec-dev libavformat-dev libswscale-dev

# Installation von torch
RUN pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

# Installation der intel extension for pytorch
RUN pip3 install intel-extension-for-pytorch --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/cpu/us/

# Installation von Detectron2
RUN pip3 install 'git+https://github.com/facebookresearch/detectron2.git'
RUN pip3 install opencv-python

# Installation der GUI für Visualisierungen
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    libgl1-mesa-glx libgl1-mesa-dri python3-tk mesa-utils v4l-utils

# Jupyterlab als online IDE
RUN pip3 install jupyterlab ipywidgets
ENV SHELL=/bin/bash

# Jupyterlab Startkommando
#jupyter-lab --ip 0.0.0.0 -IdentityProvider.token='aiav' --no-browser --allow-root
